{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onSelectYear","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","totalMaximum","dataPoints","dataPoint","reduce","a","v","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","selectedYear","setSelectedYear","filteredExpenses","filter","toString","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","max","onClick","onCancel","NewExpense","isFormOpen","setFormOpen","enteredExpenseData","random","onAddExpense","href","rel","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36abb0a7.chunk.js","sourcesContent":["import './Card.css';\r\n\r\nconst Card = (props) => {\r\n    const classes = 'card ' + props.className;\r\n    return <div className={classes}>{props.children}</div>\r\n}\r\n\r\n\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n    const yearChangeHandler = (event) => {\r\n        props.onSelectYear(event.target.value);\r\n    }\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={yearChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nconst ExpenseItem = (props) => {\r\n\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">{props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from \"./ExpenseItem\";\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = props => {\r\n    if(props.items.length === 0){\r\n        return <h2 className=\"expenses-list__fallback\">Found no expenses</h2>\r\n    }\r\n    return <ul className=\"expenses-list\">\r\n        {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n}\r\n\r\nexport default ExpensesList ","import \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n    let barFillHeight = '0%';\r\n\r\n    if(props.maxValue > 0){\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n    }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div className=\"chart-bar__fill\" style={{height: barFillHeight}}></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\n\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = dataPointValues.reduce((a, v) => (a = a + v), 0);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = props => {\r\n    const chartDataPoints = [\r\n        { label: 'Jan', value: 0},\r\n        { label: 'Feb', value: 0},\r\n        { label: 'Mar', value: 0},\r\n        { label: 'Apr', value: 0},\r\n        { label: 'May', value: 0},\r\n        { label: 'Jun', value: 0},\r\n        { label: 'Jul', value: 0},\r\n        { label: 'Aug', value: 0},\r\n        { label: 'Sep', value: 0},\r\n        { label: 'Oct', value: 0},\r\n        { label: 'Nov', value: 0},\r\n        { label: 'Dec', value: 0},\r\n\r\n    ];\r\n\r\n    for (const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints}/>\r\n}\r\n\r\nexport default ExpensesChart","import Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport \"./Expenses.css\";\r\nimport React, { useState } from \"react\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nconst Expenses = (props) => {\r\n  const [selectedYear, setSelectedYear] = useState(\"2020\");\r\n\r\n  const yearChangeHandler = (selectedYear) => {\r\n    setSelectedYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter(expense => {\r\n    return expense.date.getFullYear().toString() === selectedYear;\r\n  })\r\n\r\n  \r\n  return (\r\n    <div>\r\n\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={selectedYear}\r\n          onSelectYear={yearChangeHandler}\r\n        />\r\n        <ExpensesChart expenses={filteredExpenses}/>\r\n        <ExpensesList items={filteredExpenses}/>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, {useState} from 'react';\r\n\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setEnteredTitle(event.target.value);\r\n    }   \r\n    const amountChangeHandler = (event) => {\r\n        setEnteredAmount(event.target.value);\r\n    }\r\n    const dateChangeHandler = (event) => {\r\n        setEnteredDate(event.target.value);\r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: +enteredAmount,\r\n            date: new Date(enteredDate)\r\n        }\r\n        props.onSaveExpenseData(expenseData);\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n\r\n    }\r\n\r\n    return <form onSubmit={submitHandler}>\r\n        <div className=\"new-expense__controls\">\r\n            <div className=\"new-expense__control\">\r\n                <label>Title</label>\r\n                <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler} />\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <label>Amount</label>\r\n                <input type=\"number\" value={enteredAmount} onChange={amountChangeHandler} min=\"0.01\" step=\"0.01\"/>\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <label>Date</label>\r\n                <input type=\"date\" value={enteredDate} onChange={dateChangeHandler} min=\"2018-01-01\" max=\"2025-12-31\"/>\r\n            </div>\r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n            <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n            <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nexport default ExpenseForm;","import \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isFormOpen, setFormOpen] = useState(false);\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setFormOpen(!isFormOpen);\r\n  };\r\n\r\n  const closeForm = () => {\r\n    setFormOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isFormOpen && (\r\n        <button onClick={() => setFormOpen(!isFormOpen)}>\r\n          Add New Expense\r\n        </button>\r\n      )}\r\n      {isFormOpen && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={closeForm}\r\n        />\r\n      )}\r\n      <div className=\"link-to-Github\">\r\n        <a href=\"https://github.com/GvidasGVD/expenses-app\" target=\"_blank\" rel=\"noreferrer\">\r\n          You can find code of this app in Github\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React, { useState } from \"react\";\n\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}